#in my case installed on windows twain bridge(twain direct scanner (the server)) by default running on port 34034 and by default certificates will be installed (self signed certificate) for secure communication https

#retrieving authentication token for your scanner connected to the Twain Direct API
response=$(curl -k -X GET --tlsv1.0 "https://192.168.0.233:34034/privet/info")
x_privet_token=$(echo "$response" | grep -o '"x-privet-token":"[^"]*' | awk -F ':"' '{print $2}')
export X_PRIVET_TOKEN="$x_privet_token"
echo "x-privet-token: $X_PRIVET_TOKEN"

#create session
#used to establish a scanning session between your client application and the TWAIN Direct scanner.

response3=$(curl -k -X POST --tlsv1.0 "https://192.168.0.233:34034/privet/twaindirect/session" \
-H "Content-Type: application/json; charset=UTF-8" \
-H "Content-Length: 104" \
-H "X-Privet-Token: $X_PRIVET_TOKEN" \
-d '{"kind":"twainlocalscanner","commandId":"6ac07a52-3127-4876-bebe-6ecd2451f642","method":"createSession"}')

sessionId=$(echo $response3 | jq -r '.results.session.sessionId')

echo "sessionId: $sessionId"


# #send task
# #used to send a scanning task or job to the scanner for execution.

# #This command allows your client application to specify the scanning parameters,
# #such as scan settings, desired actions, and options for the scanning process.
# response5=$(curl -k -X POST --tlsv1.0 "https://192.168.0.161:34034/privet/twaindirect/session" \
# -H "Content-Type: application/json; charset=UTF-8" \
# -H "Content-Length: 482" \
# -H "X-Privet-Token: $X_PRIVET_TOKEN" \
# -d '{"kind":"twainlocalscanner","commandId":"6ac07a52-3127-4876-bebe-6ecd2451f642","method":"sendTask","params":{"sessionId":"'$sessionId'","task":{"actions":[{"action":"configure","streams":[{"sources":[{"source":"any","pixelFormats":[{"pixelFormat":"bw1","attributes":[{"attribute":"compression","values":[{"value":"none"}]},{"attribute": "resolution","values":[{"value": 150},{"value":200}]},{"attribute": "numberOfSheets","values": [{"value":1}]}]}]}]}]}]}}}')

# revision_task=$(echo $response5 | jq -r '.results.session.revision')
# echo "revision_task: $revision_task"

# #start capturing
# #This command signals to the scanner that it should begin capturing images according to the specified settings.

# response6=$(curl -k -X POST --tlsv1.0 "https://192.168.0.161:34034/privet/twaindirect/session" \
# -H "Content-Type: application/json; charset=UTF-8" \
# -H "Content-Length: 167" \
# -H "X-Privet-Token: $X_PRIVET_TOKEN" \
# -d '{"kind":"twainlocalscanner","commandId":"6ac07a52-3127-4876-bebe-6ecd2451f642","method":"startCapturing","params":{"sessionId":"'$sessionId'"}}')

# revision_capture=$(echo $response6 | jq -r '.results.session.revision')
# echo "revision: $revision_capture"

# #waitforevents(when you issue startCapturing followed by waitForEvents, the waitForEvents command will wait for events generated by the scanner during the scanning process. These events provide real-time information about the progress and status of the scan, allowing your application to react accordingly.)
# curl -k  -X POST --tlsv1.0 "https://192.168.0.161:34034/privet/twaindirect/session" \
# -H "Content-Type: application/json; charset=UTF-8" \
# -H "Content-Length: 186" \
# -H "X-Privet-Token: $X_PRIVET_TOKEN" \
# -d '{"kind":"twainlocalscanner","commandId":"6ac07a52-3127-4876-bebe-6ecd2451f642","method":"waitForEvents","params":{"sessionId":"'$sessionId'","sessionRevision":'$revision_capture'}}'

# echo "readimage:\n"

# #readimageblock (used by the client application to request image data blocks from the scanner. These image data blocks represent portions of the scanned document.)
# curl -k -o /tmp/image3.pdf -X POST --tlsv1.0 "https://192.168.0.161:34034/privet/twaindirect/session" \
# -H "Content-Type: application/json; charset=UTF-8" \
# -H "Content-Length: 206" \
# -H "X-Privet-Token: $X_PRIVET_TOKEN" \
# -d '{"kind":"twainlocalscanner","commandId":"6ac07a52-3127-4876-bebe-6ecd2451f642","method":"readImageBlock","params":{"sessionId":"'$sessionId'","withMetadata": true,"imageBlockNum":1}}'

# echo "release image:\n"

# #releaseimageblock(After successful processing, your application sends a "releaseImageBlock" command to the scanner to acknowledge that it has finished with that particular image block.
# curl -k  -X POST --tlsv1.0 "https://192.168.0.161:34034/privet/twaindirect/session" \
# -H "Content-Type: application/json; charset=UTF-8" \
# -H "Content-Length: 211" \
# -H "X-Privet-Token: $X_PRIVET_TOKEN" \
# -d '{"kind":"twainlocalscanner","commandId":"6ac07a52-3127-4876-bebe-6ecd2451f642","method":"releaseImageBlocks","params":{"sessionId":"'$sessionId'","imageBlockNum":1,"lastImageBlockNum":1}}'


# #stop capturing
# curl -k  -X POST --tlsv1.0 "https://192.168.0.161:34034/privet/twaindirect/session" \
# -H "Content-Type: application/json; charset=UTF-8" \
# -H "Content-Length: 166" \
# -H "X-Privet-Token: $X_PRIVET_TOKEN" \
# -d '{"kind":"twainlocalscanner","commandId":"6ac07a52-3127-4876-bebe-6ecd2451f642","method":"stopCapturing","params":{"sessionId":"'$sessionId'"}}'

#close session
curl -k  -X POST --tlsv1.0 "https://192.168.0.233:34034/privet/twaindirect/session" \
-H "Content-Type: application/json; charset=UTF-8" \
-H "Content-Length: 165" \
-H "X-Privet-Token: $X_PRIVET_TOKEN" \
-d '{"kind":"twainlocalscanner","commandId":"6ac07a52-3127-4876-bebe-6ecd2451f642","method":"closeSession","params":{"sessionId":"'$sessionId'"}}'